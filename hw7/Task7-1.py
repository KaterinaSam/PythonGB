# 1. Реализовать класс Matrix (матрица). 
# Обеспечить перегрузку конструктора класса (метод __init__()), который должен принимать данные (список списков) 
# для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц вы найдете в методичке.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц). 
# Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем с 
# первым элементом первой строки второй матрицы и т.д.

import operator     # Способ №1
import numpy        # Способ №2

class Matrix:
    """
    Матрица
    """
    def __init__(self, mtrx):
        """Конструктор"""
        self.__mtrx = mtrx
        
    def __str__(self):
        """Вывод матрицы в строковом представлении"""
        str1 = f'{self.__mtrx}'[1:-1]
        str1 = str1.replace(',', '')
        str1 = str1.replace('] [', ']\n[')
        return str1
    
    # в метод __add__ еще можно добавить проверку размерности двух массивов
    
    # Способ №1
    # def __add__(self, other):
    #     """Суммирование матриц"""
    #     sumli = []    
    #     for i in range(len(self.__mtrx)):
    #         sumli.append( list(map(operator.add, self.__mtrx[i], other.__mtrx[i])) )
    #     return Matrix( sumli ) 
    
    # Способ №2
    def __add__(self, other):
        """Суммирование матриц"""
        return Matrix( numpy.array(self.__mtrx) + numpy.array(other.__mtrx) )     



mtrx1 = Matrix([[1,2,3], [1,2,3], [1,2,3]])
mtrx2 = Matrix([[4,5,6], [7,8,9], [0,1,2]])

print(f'Исходная матрица 1:\n{mtrx1}')
print(f'Исходная матрица 2:\n{mtrx2}')
print(f'Сумма матриц 1 и 2:\n{mtrx1 + mtrx2}')